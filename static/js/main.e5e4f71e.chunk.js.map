{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onChangePage","items","lastPage","Math","ceil","pageItemsList","className","classNames","disabled","href","onClick","map","pageNumber","active","item","App","useState","totalItems","itemsPerPage","setItemsPerPage","selectedPage","setSelectedPage","firstItem","lastItem","id","value","onChange","event","numOfPages","target","htmlFor","page","maxCountOfPages","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAQtC,IANFC,EAMC,EANDA,MACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,MAIIC,EAAWC,KAAKC,KAAKP,EAAQC,GAC7BO,EAAgBf,EAFJ,EAE0BY,GAE5C,OACE,qCACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAVM,IAUIT,IAHhB,SAME,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMV,EAAaD,EAAc,EAAGG,IAL/C,oBAUDG,EAAcM,KAAI,SAAAC,GAAU,OAC3B,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQd,IAAgBa,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMV,EAAaY,IAJ9B,SAMGA,KAREA,MAYT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUT,IAAgBG,IAHhC,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAc,QACdC,QAAS,kBAAMV,EAAaD,EAAc,EAAGG,IAL/C,uBAWJ,6BACGD,EAAMU,KAAI,SAACG,GAAD,OAAkB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3EhDC,EAAgB,WAC3B,MAAqBC,mBAAS,IAAvBC,EAAP,oBACA,EAAwCD,mBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAwCH,mBAAS,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEMC,EAAYJ,EAAeE,GAAgBF,EAAe,GAC1DK,EAAYL,EAAeE,GAAiBH,EAC7CC,EAAeE,EAChBH,EAEEhB,EAAQX,EAAWgC,EAAWC,GACjCZ,KAAI,SAAAjB,GAAC,qBAAYA,MAepB,OACE,sBAAKY,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWc,EADX,mBACkCE,EADlC,cACiDC,EADjD,eACgEN,EADhE,OAIA,sBAAKX,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOP,EACPQ,SAAU,SAAAC,GAAK,OApBGC,GAoBqBD,EAAME,OAAOJ,MAnB5DN,EAAgBS,QAChBP,EAAgB,GAFS,IAACO,GAepB,UAOE,wBAAQH,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACET,MAAOoB,EACPnB,QAASoB,EACTnB,YAAaqB,EACbpB,aA7Ca,SAAC+B,EAAcC,GAC5BA,IAAoBD,EAAO,GAAKA,EAAOC,IAI3CX,EAAgBU,IAyCZ9B,MAAOA,QC7DfgC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e5e4f71e.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onChangePage: (page: number, maxCountOfPages?: number) => void;\n  items: string[];\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onChangePage,\n    items,\n  },\n) => {\n  const firstPage = 1;\n  const lastPage = Math.ceil(total / perPage);\n  const pageItemsList = getNumbers(firstPage, lastPage);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === firstPage },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => onChangePage(currentPage - 1, lastPage)}\n          >\n            «\n          </a>\n        </li>\n        {pageItemsList.map(pageNumber => (\n          <li\n            className={classNames(\n              'page-item',\n              { active: currentPage === pageNumber },\n            )}\n            key={pageNumber}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageNumber}`}\n              onClick={() => onChangePage(pageNumber)}\n            >\n              {pageNumber}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === lastPage },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"false\"\n            onClick={() => onChangePage(currentPage + 1, lastPage)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {items.map((item: string) => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const [totalItems] = useState(42);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const firstItem = itemsPerPage * selectedPage - (itemsPerPage - 1);\n  const lastItem = (itemsPerPage * selectedPage) <= totalItems\n    ? (itemsPerPage * selectedPage)\n    : totalItems;\n\n  const items = getNumbers(firstItem, lastItem)\n    .map(n => `Item ${n}`);\n\n  const selectPage = (page: number, maxCountOfPages: number | undefined) => {\n    if (maxCountOfPages && (page < 1 || page > maxCountOfPages)) {\n      return;\n    }\n\n    setSelectedPage(page);\n  };\n\n  const changeItemsPerPage = (numOfPages: number): void => {\n    setItemsPerPage(numOfPages);\n    setSelectedPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${firstItem} - ${lastItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={event => changeItemsPerPage(+event.target.value)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={totalItems}\n        perPage={itemsPerPage}\n        currentPage={selectedPage}\n        onChangePage={selectPage}\n        items={items}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}